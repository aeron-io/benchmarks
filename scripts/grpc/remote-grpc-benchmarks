#!/usr/bin/env bash
##
## Copyright 2015-2021 Real Logic Limited.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## https://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

if [ -z "$MESSAGE_RATE" ];
then
  export MESSAGE_RATE=25000
fi

if [ -z "$SERVER_PORT" ];
then
  SERVER_PORT=13400
fi

source "${DIR}/../remote-benchmarks-runner"

required_vars=(
  "BENCHMARKS_PATH"
  "CLIENT_JAVA_HOME"
  "CLIENT_CPU_CORES"
  "SERVER_HOST"
  "SERVER_PORT"
  "SERVER_JAVA_HOME"
  "SERVER_CPU_CORES")

for var in "${required_vars[@]}"; do
  if [[ -z "${!var}" ]]
  then
    echo "env var $var must be set"
    required_var_missing=true
  fi
done

if [ -n "$required_var_missing" ];
then
  exit 1
fi


tls_options=("false" "true")
command_wrappers=("" "onload --profile=latency --force-profiles")

while [[ $# -gt 0 ]]
do
  case "$1" in
    --no-tls)
      tls_options=("false")
      shift
      ;;
    --no-onload)
      command_wrappers=("")
      shift
      ;;
    -h|--help)
      echo "$0 [--no-tls] [--no-onload]"
      exit
      ;;
    *)
      echo "Invalid parameter. Use --help to get a list of supported parameters."
      exit 1
      ;;
  esac
done

client="streaming"

for tls in "${tls_options[@]}"
do
  for onload in "${command_wrappers[@]}"
  do
    scenario="grpc-$client"

    if [ "$tls" == "true" ]
    then
        scenario="$scenario-tls"
    fi

    if [ -n "$onload" ]
    then
        scenario="$scenario-onload"
    fi

    echo -e "\n Testing scenario: '$scenario'\n"

    # shellcheck disable=SC2153
    run_benchmarks \
      "export JAVA_HOME=\"$CLIENT_JAVA_HOME\" && taskset -c $CLIENT_CPU_CORES $onload $BENCHMARKS_PATH/scripts/grpc/$client-client" \
      "export JAVA_HOME=\"$SERVER_JAVA_HOME\" && taskset -c $SERVER_CPU_CORES $onload $BENCHMARKS_PATH/scripts/grpc/server" \
      "$(kill_java_process "uk.co.real_logic.benchmarks.grpc.remote.EchoServer")" \
      "$BENCHMARKS_PATH/scripts/grpc/benchmark.properties" \
      "uk.co.real_logic.benchmarks.remote.outputFileNamePrefix=$scenario" \
      "uk.co.real_logic.benchmarks.remote.outputDirectory=$BENCHMARKS_PATH/scripts/results" \
      "uk.co.real_logic.benchmarks.grpc.remote.server.host=$SERVER_HOST" \
      "uk.co.real_logic.benchmarks.grpc.remote.server.port=$SERVER_PORT" \
      "uk.co.real_logic.benchmarks.grpc.remote.tls=$tls" \
      "uk.co.real_logic.benchmarks.grpc.remote.certificates=$BENCHMARKS_PATH/certificates"
  done
done

download_results "grpc-results.zip" "$BENCHMARKS_PATH/scripts/results" "$DIR/.."