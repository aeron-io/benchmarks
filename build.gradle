/*
 * Copyright 2015 Real Logic Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.2.0"
    }
}

defaultTasks 'clean', 'jmh'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'me.champeau.gradle.jmh'

group = 'uk.co.real_logic.jmh'
version = '0.1-SNAPSHOT'

jmh {
    include = '.*latency.*Disruptor.*'
    jmhVersion = '1.11'
    warmupIterations = 3
    iterations = 3
    fork = 3
    timeUnit = 'ns'
    jvmArgs = '-Dagrona.disable.bounds.checks=true'
    //timeOnIteration = '3s'
}

dependencies {
    jmh 'org.hdrhistogram:HdrHistogram:2.1.7'
    jmh 'uk.co.real-logic:aeron-all:0.1.5-SNAPSHOT'
    jmh 'com.lmax:disruptor:3.3.2'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.debug = true
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
