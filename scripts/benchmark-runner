#!/usr/bin/env bash
##
## Copyright 2015-2021 Real Logic Limited.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## https://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

##
# Example: Invoking `benchmark-runner` from the `scripts` directory.
#
# $ ./benchmark-runner --output-file "echo-test" --message-rate "1000,5000" --burst-size "1,10" --message-length "32,224,1376" "aeron/echo-client"
##

RUNS=3
ITERATIONS=10
MESSAGE_RATE=(100000)
BURST_SIZE=(1 10)
MESSAGE_LENGTH=(32 224 1376)

while [[ $# -gt 0 ]]
do
  option="$1"
  case ${option} in
    -o|--output-file)
      OUTPUT_FILE_NAME="$2";
      shift
      shift
      ;;
    -m|--message-rate)
      IFS=',';
      read -ra MESSAGE_RATE <<< "$2"
      unset IFS;
      shift
      shift
      ;;
    -b|--burst-size)
      IFS=',';
      read -ra BURST_SIZE <<< "$2"
      unset IFS;
      shift
      shift
      ;;
    -l|--message-length)
      IFS=',';
      read -ra MESSAGE_LENGTH <<< "$2"
      unset IFS;
      shift
      shift
      ;;
    -i|--iterations)
      ITERATIONS="$2";
      shift
      shift
      ;;
    -r|--runs)
      RUNS="$2";
      shift
      shift
      ;;
    -h|--help)
      echo "$0 (-o|--output-file) \"\$output-file-name-prefix\" [(-m|--message-rate) \"\$message-rate-csv\"] [(-b|--burst-size) \"\$burst-size-csv\"] [(-l|--message-length) \"\$message-length-in-bytes-csv\"] [(-i|--iterations) \$iterations] [(-r|--runs) \$runs] \"\$command \$cmdArg1 ...\""
      exit
      ;;
    *)
      COMMAND="$1"
      shift
      ;;
  esac
done

if [ -z "$OUTPUT_FILE_NAME" ];
then
  echo 'Flag -o/--output-file is required'
  exit 1
fi

EXISTING_JVM_OPTS=$JVM_OPTS

for messageRate in "${MESSAGE_RATE[@]}"
do
  for burst in "${BURST_SIZE[@]}"
  do
    for messageLength in "${MESSAGE_LENGTH[@]}"
    do
      for (( r=1; r<=RUNS; r++ ))
      do
        echo -e '\n#######################'
        echo 'Benchmark run #'$r' ...'
        echo '#######################'

        JVM_OPTS="$EXISTING_JVM_OPTS \
        -Duk.co.real_logic.benchmarks.remote.outputFileNamePrefix=${OUTPUT_FILE_NAME} \
        -Duk.co.real_logic.benchmarks.remote.iterations=${ITERATIONS} \
        -Duk.co.real_logic.benchmarks.remote.messageRate=${messageRate# } \
        -Duk.co.real_logic.benchmarks.remote.batchSize=${burst# } \
        -Duk.co.real_logic.benchmarks.remote.messageLength=${messageLength# }" \
         ${COMMAND}
      done
    done
  done
done

JVM_OPTS=$EXISTING_JVM_OPTS